import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

from scoring import score_user, bucket_to_label
from portfolios import MODEL_PORTFOLIOS

st.set_page_config(page_title="Robo-Advisor Lite", page_icon="üí∏")

# ---------- UI ----------
st.title("üí∏ Robo-Advisor Lite")
st.subheader("Completa el cuestionario y obt√©n un portafolio acorde a tu perfil de riesgo.")

with st.form("questionnaire"):
    st.write("### 10 preguntas sobre tu situaci√≥n y tolerancia al riesgo")

    # 1
    age = st.slider("1Ô∏è‚É£  ¬øCu√°l es tu edad?", 18, 75, 30)

    # 2
    horizon = st.selectbox(
        "2Ô∏è‚É£  ¬øCu√°nto tiempo planificas mantener la inversi√≥n?",
        ("< 3 a√±os", "3-5 a√±os", "5-10 a√±os", "> 10 a√±os"),
    )

    # 3
    income = st.selectbox(
        "3Ô∏è‚É£  Proporci√≥n de tus ingresos que puedes invertir regularmente",
        ("< 5 %", "5-10 %", "10-20 %", "> 20 %"),
    )

    # 4
    knowledge = st.selectbox(
        "4Ô∏è‚É£  ¬øQu√© tan familiarizado est√°s con los mercados financieros?",
        ("Principiante", "Intermedio", "Avanzado"),
    )

    # 5
    max_drop = st.selectbox(
        "5Ô∏è‚É£  ¬øQu√© ca√≠da m√°xima (en %) tolerar√≠as sin vender?",
        ("5 %", "10 %", "20 %", "30 %", "> 30 %"),
    )

    # 6
    reaction = st.selectbox(
        "6Ô∏è‚É£  Si tu portafolio cae 15 % en un mes, ¬øqu√© har√≠as?",
        ("Vendo todo", "Vendo una parte", "No hago nada", "Compro m√°s"),
    )

    # 7
    liquidity = st.selectbox(
        "7Ô∏è‚É£  Necesidad de rescatar dinero r√°pidamente",
        ("Alta", "Media", "Baja"),
    )

    # 8
    goal = st.selectbox(
        "8Ô∏è‚É£  Principal objetivo de inversi√≥n",
        ("Proteger capital", "Ingresos regulares", "Crecimiento balanceado", "M√°ximo crecimiento"),
    )

    # 9
    inflation = st.selectbox(
        "9Ô∏è‚É£  ¬øQu√© opinas del riesgo de inflaci√≥n sobre tus ahorros?",
        ("No me preocupa", "Me preocupa moderadamente", "Me preocupa mucho"),
    )

    #10
    digital = st.selectbox(
        "üîü  Grado de confianza en plataformas digitales para invertir",
        ("Baja", "Media", "Alta"),
    )

    submitted = st.form_submit_button("Calcular perfil üîé")

if submitted:
    answers = dict(
        age=age,
        horizon=horizon,
        income=income,
        knowledge=knowledge,
        max_drop=max_drop,
        reaction=reaction,
        liquidity=liquidity,
        goal=goal,
        inflation=inflation,
        digital=digital,
    )

    bucket, total_score = score_user(answers)
    label = bucket_to_label[bucket]

    st.success(f"### Tu perfil: **{label}** (puntaje {total_score})")

    # Traer portafolio modelo
    pf = MODEL_PORTFOLIOS[bucket].copy()
    pf_df = pd.DataFrame(
        {"Ticker": pf.keys(), "Peso %": [v * 100 for v in pf.values()]}
    )

    # Gr√°fico
    fig, ax = plt.subplots()
    ax.pie(pf.values(), labels=pf.keys(), autopct="%1.0f%%", startangle=90)
    ax.axis("equal")
    st.pyplot(fig)

    st.write("#### Detalle de la cartera")
    st.table(pf_df)

    # Descargar CSV
    csv = pf_df.to_csv(index=False).encode()
    st.download_button(
        "üì• Descargar en CSV", csv, f"portfolio_{label}.csv", "text/csv"
    )

    st.info(
        """
        **Disclaimer**  
        Esta herramienta tiene fines **educativos** y no constituye recomendaci√≥n personalizada
        seg√∫n la normativa vigente. El usuario es responsable de sus decisiones de inversi√≥n.
        """
    )
